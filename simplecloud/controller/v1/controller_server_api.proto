syntax = "proto3";

package simplecloud.controller.v1;

option java_package = "app.simplecloud.proto.controller.v1";
option java_multiple_files = true;

import "simplecloud/controller/v1/controller_types.proto";

message GroupNameRequest {
  string name = 1;
}

message ServerIdRequest {
  string id = 1;
}

message ServerTypeRequest {
  ServerType type = 1;
}

message GetServersByGroupResponse {
  repeated ServerDefinition servers = 1;
}

message ServerUpdatePropertyRequest {
  string id = 1;
  string key = 2;
  string value = 3;
}

message ServerUpdateStateRequest {
  string id = 1;
  ServerState state = 2;
}

message ServerUpdateRequest {
  ServerDefinition server = 1;
  bool deleted = 2;
}

message StopServerByNumericalRequest {
  string group = 1;
  uint64 numericalId = 2;
}

message GetAllServersRequest {

}

message GetAllServersResponse {
  repeated ServerDefinition servers = 1;
}

message GetServerByNumericalRequest {
  string group = 1;
  uint64 numericalId = 2;
}

service ControllerServerService {
  rpc GetAllServers(GetAllServersRequest) returns (GetAllServersResponse);
  rpc GetServersByType(ServerTypeRequest) returns (GetServersByGroupResponse);
  rpc GetServersByGroup(GroupNameRequest) returns (GetServersByGroupResponse);
  rpc GetServerByNumerical(GetServerByNumericalRequest) returns (ServerDefinition);
  rpc GetServerById(ServerIdRequest) returns (ServerDefinition);
  rpc StartServer(GroupNameRequest) returns (ServerDefinition);
  rpc StopServer(ServerIdRequest) returns (StatusResponse);
  rpc StopServerByNumerical(StopServerByNumericalRequest) returns (StatusResponse);
  rpc UpdateServer(ServerUpdateRequest) returns (StatusResponse);
  rpc UpdateServerState(ServerUpdateStateRequest) returns (StatusResponse);
  rpc UpdateServerProperty(ServerUpdatePropertyRequest) returns (StatusResponse);
  rpc AttachServerHost(ServerHostDefinition) returns (StatusResponse);
}