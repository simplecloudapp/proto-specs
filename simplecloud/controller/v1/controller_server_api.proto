syntax = "proto3";

package simplecloud.controller.v1;

option java_package = "app.simplecloud.proto.controller.v1";
option java_multiple_files = true;

import "simplecloud/controller/v1/controller_types.proto";
import "simplecloud/controller/v1/event_types.proto";

message GetServersByGroupRequest {
  string group_name = 1;
}

message ControllerStartServerRequest {
  string group_name = 1;
  ServerStartCause start_cause = 2;
  int32 amount = 3;
}

message GetServerByIdRequest {
  string server_id = 1;
}

message StopServerRequest {
  string server_id = 1;
  ServerStopCause stop_cause = 2;
}

message ServerTypeRequest {
  ServerType server_type = 1;
}

message GetServersByGroupResponse {
  repeated ServerDefinition servers = 1;
}

message GetServersByTypeResponse {
  repeated ServerDefinition servers = 1;
}

message UpdateServerPropertyRequest {
  string server_id = 1;
  string property_key = 2;
  string property_value = 3;
}

message UpdateServerStateRequest {
  string server_id = 1;
  ServerState server_state = 2;
}

message UpdateServerRequest {
  ServerDefinition server = 1;
  bool deleted = 2;
}

message StopServerByNumericalRequest {
  string group_name = 1;
  ServerStopCause stop_cause = 2;
  uint64 numerical_id = 3;
}

message StopServerByGroupRequest {
  string group_name = 1;
  ServerStopCause stop_cause = 2;
}

message StopServerByGroupWithTimeoutRequest {
  string group_name = 1;
  ServerStopCause stop_cause = 2;
  uint32 timeout_seconds = 3;
}

message StopServerByGroupResponse {
  repeated ServerDefinition servers = 1;
}

message GetAllServersRequest {

}

message GetAllServersResponse {
  repeated ServerDefinition servers = 1;
}

message GetServerByNumericalRequest {
  string group_name = 1;
  uint64 numerical_id = 2;
}

message AttachServerHostRequest {
  ServerHostDefinition server_host = 1;
}

service ControllerServerService {
  rpc GetAllServers(GetAllServersRequest) returns (GetAllServersResponse);
  rpc GetServersByType(ServerTypeRequest) returns (GetServersByTypeResponse);
  rpc GetServersByGroup(GetServersByGroupRequest) returns (GetServersByGroupResponse);
  rpc GetServerByNumerical(GetServerByNumericalRequest) returns (ServerDefinition);
  rpc GetServerById(GetServerByIdRequest) returns (ServerDefinition);
  rpc StartServer(ControllerStartServerRequest) returns (ServerDefinition);
  rpc StopServer(StopServerRequest) returns (ServerDefinition);
  rpc StopServerByNumerical(StopServerByNumericalRequest) returns (ServerDefinition);
  rpc StopServerByGroup(StopServerByGroupRequest) returns (StopServerByGroupResponse);
  rpc StopServerByGroupWithTimeout(StopServerByGroupWithTimeoutRequest) returns (StopServerByGroupResponse);
  rpc UpdateServer(UpdateServerRequest) returns (ServerDefinition);
  rpc UpdateServerState(UpdateServerStateRequest) returns (ServerDefinition);
  rpc UpdateServerProperty(UpdateServerPropertyRequest) returns (ServerDefinition);
  rpc AttachServerHost(AttachServerHostRequest) returns (ServerHostDefinition) {
    option deprecated = true;
  };
}