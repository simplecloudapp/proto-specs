syntax = "proto3";

package simplecloud.controller.v1;

option java_package = "app.simplecloud.proto.controller.v1";
option java_multiple_files = true;

import "simplecloud/controller/v1/controller_types.proto";
import "google/protobuf/timestamp.proto";

message ServerHostStartServerRequest {
  GroupDefinition group = 1;
  ServerDefinition server = 2;
}

message TemplateFile {
  string path = 1;
  string type = 2;
  bool is_directory = 3;
}


message ServerHostStreamServerLogsRequest {
  string server_id = 1;
}


message ServerHostStreamServerLogsResponse {
  google.protobuf.Timestamp timestamp = 1;
  string content = 2;
}

message ServerHostServerExecuteCommandRequest {
  string server_id = 1;
  string command = 2;
}

message ServerHostServerExecuteCommandResponse {

}

message GetFileTreeRequest {

}

message GetFileTreeResponse {
  repeated TemplateFile files = 1;
}

message GetFileContentsRequest {
  string path = 1;
}

message DeleteFileRequest {
  string path = 1;
}

message DeleteFileResponse {

}

message TriggerManualActionRequest {
  string action = 1;
}

message TriggerManualActionResponse {

}

message UpdateFileRequest {
  string path = 1;
  bytes content = 2;
}

message UpdateFileResponse {

}

message GetFileContentsResponse {
  bytes content = 1;
}

message MoveFileRequest {
  string from = 1;
  string to = 2;
}

message MoveFileResponse {

}

service ServerHostService {
  rpc StartServer(ServerHostStartServerRequest) returns (ServerDefinition);
  rpc StopServer(ServerDefinition) returns (ServerDefinition);
  rpc ReattachServer(ServerDefinition) returns (ServerDefinition);
  rpc GetFileTree(GetFileTreeRequest) returns (GetFileTreeResponse);
  rpc GetFileContents(GetFileContentsRequest) returns (GetFileContentsResponse);
  rpc UpdateFile(UpdateFileRequest) returns (UpdateFileResponse);
  rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse);
  rpc MoveFile(MoveFileRequest) returns (MoveFileResponse);
  rpc ExecuteCommand(ServerHostServerExecuteCommandRequest) returns (ServerHostServerExecuteCommandResponse);
  rpc StreamServerLogs(ServerHostStreamServerLogsRequest) returns (stream ServerHostStreamServerLogsResponse);
  rpc TriggerManualAction(TriggerManualActionRequest) returns (TriggerManualActionResponse);
}