syntax = "proto3";

package simplecloud.droplet.player.v1;

option java_package = "app.simplecloud.droplet.player.proto.v1";
option java_multiple_files = true;

message AdventureComponent {
  string json = 1;
}

message AdventureBook {
  AdventureComponent author = 1;
  AdventureComponent title = 2;
  repeated AdventureComponent pages = 3;
}

message AdventureSound {
  string sound = 1;
  string source = 2;
  float volume = 3;
  float pitch = 4;
}

message AdventureBossBar {
  AdventureComponent title = 2;
  float progress = 3;
  string color = 4;
  string overlay = 5;
  repeated string flags = 6;
}

message SendMessageRequest {
  string uniqueId = 1;
  AdventureComponent message = 2;
}

message SendMessageResponse {}

message SendActionbarRequest {
  string uniqueId = 1;
  AdventureComponent message = 2;
}

message SendActionbarResponse {}

message SendPlayerListHeaderAndFooterRequest {
  string uniqueId = 1;
  AdventureComponent header = 2;
  AdventureComponent footer = 3;
}

message SendPlayerListHeaderAndFooterResponse {}

message SendOpenBookRequest {
  string uniqueId = 1;
  AdventureBook book = 2;
}

message SendOpenBookResponse {}

message SendPlaySoundRequest {
  string uniqueId = 1;
  AdventureSound sound = 2;
}

message SendPlaySoundResponse {}

message SendPlaySoundToEmitterRequest {
  string uniqueId = 1;
  AdventureSound sound = 2;
  string emitter = 3;
}

message SendPlaySoundToEmitterResponse {}

message SendPlaySoundToCoordinatesRequest {
  string uniqueId = 1;
  AdventureSound sound = 2;
  double x = 3;
  double y = 4;
  double z = 5;
}

message SendPlaySoundToCoordinatesResponse {}

message SendStopSoundRequest {
  string uniqueId = 1;
  optional AdventureSound sound = 2;
  optional string source = 3;
}

message SendStopSoundResponse {}

message SendClearTitleRequest {
  string uniqueId = 1;
}

message SendClearTitleResponse {}

message SendResetTitleRequest {
  string uniqueId = 1;
}

message SendResetTitleResponse {}

message SendBossBarRequest {
  string uniqueId = 1;
  AdventureBossBar bossBar = 2;
}

message SendBossBarResponse {}

message SendBossBarHideRequest {
  string uniqueId = 1;
  AdventureBossBar bossBar = 2;
}

message SendBossBarHideResponse {}

message SendTitlePartTitleRequest {
  string uniqueId = 1;
  AdventureComponent component = 2;
}

message SendTitlePartTitleResponse {}

message SendTitlePartSubTitleRequest {
  string uniqueId = 1;
  AdventureComponent component = 2;
}

message SendTitlePartSubTitleResponse {}

message SendTitlePartTimesRequest {
  string uniqueId = 1;
  int64 fadeIn = 2;
  int64 stay = 3;
  int64 fadeOut = 4;
}

message SendTitlePartTimesResponse {}

service PlayerAdventureService {
  rpc sendMessage(SendMessageRequest) returns (SendMessageResponse);
  rpc sendActionbar(SendActionbarRequest) returns (SendActionbarResponse);
  rpc sendPlayerListHeaderAndFooter(SendPlayerListHeaderAndFooterRequest) returns (SendPlayerListHeaderAndFooterResponse);
  rpc sendOpenBook(SendOpenBookRequest) returns (SendOpenBookResponse);
  rpc sendPlaySound(SendPlaySoundRequest) returns (SendPlaySoundResponse);
  rpc sendPlaySoundToEmitter(SendPlaySoundToEmitterRequest) returns (SendPlaySoundToEmitterResponse);
  rpc sendPlaySoundToCoordinates(SendPlaySoundToCoordinatesRequest) returns (SendPlaySoundToCoordinatesResponse);
  rpc sendStopSound(SendStopSoundRequest) returns (SendStopSoundResponse);
  rpc sendClearTitle(SendClearTitleRequest) returns (SendClearTitleResponse);
  rpc sendResetTitle(SendResetTitleRequest) returns (SendResetTitleResponse);
  rpc sendBossBar(SendBossBarRequest) returns (SendBossBarResponse);
  rpc sendBossBarToPlayer(SendBossBarRequest) returns (SendBossBarResponse);
  rpc sendBossBarRemove(SendBossBarHideRequest) returns (SendBossBarHideResponse);
  rpc sendTitlePartTitle(SendTitlePartTitleRequest) returns (SendTitlePartTitleResponse);
  rpc sendTitlePartSubTitle(SendTitlePartSubTitleRequest) returns (SendTitlePartSubTitleResponse);
  rpc sendTitlePartTimes(SendTitlePartTimesRequest) returns (SendTitlePartTimesResponse);
}